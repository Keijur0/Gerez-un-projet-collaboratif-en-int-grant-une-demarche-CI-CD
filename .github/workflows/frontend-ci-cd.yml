name: Front-end CI-CD workflows

on:
  push:
    paths:
      - 'front/**'
      - '.github/workflows/**'
    branches: [main]
  pull_request:
    paths:
      - 'front/**'
      - '.github/workflows/**'
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  build_test_and_analyze:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Cache Node.js modules
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm install

    - name: Run tests with coverage
      run: npm run test -- --code-coverage --browsers=ChromeHeadless --watch=false

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: front/coverage/

    - name: Analyze with SonarCloud
      uses: SonarSource/sonarcloud-github-action@master
      with:
        projectBaseDir: ./front
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build_and_push_docker_image:
      runs-on: ubuntu-latest
      needs: build_test_and_analyze
    
      defaults:
        run:
          working-directory: ./front
    
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
          
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
    
        - name: Cache Docker layers
          uses: actions/cache@v4
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}
            restore-keys: |
              ${{ runner.os }}-buildx-
    
        - name: Login to DockerHub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}
    
        - name: Build Docker image
          run: |
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-frontend:latest .
  
        - name: Push Docker image
          run: |
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-frontend:latest
